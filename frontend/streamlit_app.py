import streamlit as st
import requests
import os

BACKEND = os.getenv("BACKEND_URL", "http://127.0.0.1:8000")


st.set_page_config(page_title="ContentCrafterAI", layout="wide")
st.title("🧩 ContentCrafterAI – Agentic Campaign UI")

with st.sidebar:
  st.write(f"**Platform:** {draft.get('platform','linkedin')}")
  st.text_area("Text", value=draft.get("text", ""), height=220)
  st.write("**Hashtags:**", ", ".join(draft.get("hashtags", [])))
  st.write("**CTA:**", draft.get("cta", ""))
  st.code(draft.get("image_brief", ""), language="markdown")


with col2:
  st.subheader("🖼️ Image Preview")
  img_url = result.get("image_url")
  if img_url:
    st.image(img_url, caption="Generated by DALL·E")
  else:
    st.info("No image for this draft.")


st.divider()
publish_col, refresh_col = st.columns([1,1])
with publish_col:
  if st.button("✅ Publish & Learn", type="primary"):
    with st.spinner("Publishing and writing feedback to MemGPT…"):
      r = requests.post(f"{BACKEND}/api/publish", json={"draft_id": draft_id})
      if r.ok:
        st.session_state["published"] = r.json()
        st.success("Published and logged engagement.")
      else:
        st.error(r.text)
with refresh_col:
  if st.button("🔄 Refresh Draft Data"):
    r = requests.get(f"{BACKEND}/api/draft/{draft_id}")
      if r.ok:
        st.session_state["result"] = r.json()
      else:
        st.error(r.text)


published = st.session_state.get("published")
if published:
  st.subheader("📊 Published Result")
  st.json(published)


st.caption("Set BACKEND_URL env var if your FastAPI runs elsewhere. Default http://127.0.0.1:8000")
